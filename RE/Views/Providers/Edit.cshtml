@model RE.Models.ProviderCreateModel

@{
    ViewBag.Title = "Edit" + Model.Name;
}

<h2>Edit @Model.Name</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.CreatedDate)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateID, "StateID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GenderID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nationality", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NationalityID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NationalityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @type = "tel" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sliding Scale", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownList("SlidingScale", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SlidingScale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Discount Cash Pay", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DiscountCashPay", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiscountCashPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hide, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Hide)
                    @Html.ValidationMessageFor(model => model.Hide, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("RE Verified", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.REVerified)
                    @Html.ValidationMessageFor(model => model.REVerified, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @if (Model.IMGLocation != null)
            {
                <img style="width:75px; height:auto" src="~/Content/Images/Providers/@Model.IMGLocation" />
                <div style="margin-top:15px"></div>
            }

            @Html.TextBox("UploadedLocation", "", new { type = "file" }) <br />
        </div>


        <div id="InsureancePlaceHolder" class="PlaceHolder">
            <h3>Insurance</h3>
            <hr />
            <div class="row">
                <div class="col-lg-12">

                    @foreach (var item in ViewBag.ListOfInsuranceCompanys)
                    {
                        bool IsChecked = Model.Insurances.Where(mm => mm.InsureanceID == item.ID).Count() > 0 ? true : false;

                        <label for="Insurances[@item.ID][0]" class="form-check-label">
                            <input class="form-check-input" style="margin-left:5px" type="checkbox" name="Insurances[0].SelectedInsurance"
                                   id="Insurances[@item.ID][0]" value="@item.ID" @(IsChecked == true ? "checked=checked" : "") />
                            @item.Name
                        </label>
                    }
                </div>
            </div>
        </div>

        <div id="ServicesPlaceHolder" class="PlaceHolder">
            <h3>Services</h3>
            <hr />
            <div id="TempServices">
                <div class="row">
                    <div class="col-lg-12">
                        @foreach (var item in ViewBag.ListOfServices)
                        {
                            bool IsChecked = Model.Services.Where(mm => mm.ServiceID == item.ID).Count() > 0 ? true : false;
                            <label for="Services[@item.ID][0]" class="form-check-label">
                                <input style="margin-left:5px" type="checkbox" name="Services[0].SelectedService"
                                       id="Services[@item.ID][0]" value="@item.ID" @(IsChecked == true ? "checked=checked" : "") />
                                @item.Name
                            </label>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div id="TypesPlaceHolder" class="PlaceHolder">
            <h3>Provider Types</h3>
            <hr />

            <div id="TempServices">
                <div class="row">
                    <div class="col-lg-12">
                        @foreach (var item in ViewBag.ListOfTypes)
                        {
                            bool IsChecked = Model.Types.Where(mm => mm.TypeID == item.ID).Count() > 0 ? true : false;
                            <label for="Types[@item.ID][0]">
                                <input style="margin-left:5px" type="checkbox" name="Types[0].SelectedType"
                                       id="Types[@item.ID][0]" value="@item.ID" @(IsChecked == true ? "checked=checked" : "") />
                                @item.Type
                            </label>
                        }
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group" style="margin-top:15px;">
            <div class="col-md-offset-0 col-md-12">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
